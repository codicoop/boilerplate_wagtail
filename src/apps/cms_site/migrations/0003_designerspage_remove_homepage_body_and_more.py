# Generated by Django 4.0.4 on 2022-05-17 15:12

from django.db import migrations, models
import django.db.models.deletion
import uuid
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailimages', '0023_add_choose_permissions'),
        ('wagtailcore', '0066_collection_management_permissions'),
        ('cms_site', '0002_replace_home'),
    ]

    operations = [
        migrations.CreateModel(
            name='DesignersPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('designers_list', wagtail.core.fields.StreamField([('item', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.CharBlock(label='Quote')), ('name', wagtail.core.blocks.CharBlock(label='Name')), ('role', wagtail.core.blocks.CharBlock(help_text="I.e.: 'Area collection designer'", label='Role')), ('description', wagtail.core.blocks.CharBlock(label='Description')), ('photo', wagtail.images.blocks.ImageChooserBlock(label='Photo'))]))], verbose_name='Compositions, renders and photos')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RemoveField(
            model_name='homepage',
            name='body',
        ),
        migrations.AddField(
            model_name='homepage',
            name='collection_1_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image', verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='collection_1_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.page', verbose_name="Collection's page"),
        ),
        migrations.AddField(
            model_name='homepage',
            name='collection_1_title',
            field=models.CharField(blank=True, default='', max_length=40, verbose_name='Title'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='collection_2_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image', verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='collection_2_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.page', verbose_name="Collection's page"),
        ),
        migrations.AddField(
            model_name='homepage',
            name='collection_2_title',
            field=models.CharField(blank=True, default='', max_length=40, verbose_name='Title'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='overlay_body',
            field=models.TextField(blank=True, default='', verbose_name='Text'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='overlay_button_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.page', verbose_name='Linked page'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='overlay_button_text',
            field=models.CharField(blank=True, default='', max_length=20, verbose_name='Button title'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='overlay_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image', verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='overlay_title',
            field=models.CharField(blank=True, default='', max_length=80, verbose_name='Title'),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('items_list', wagtail.core.fields.StreamField([('item', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(label='Title')), ('image', wagtail.images.blocks.ImageChooserBlock(label='Image')), ('item_types', wagtail.core.blocks.ListBlock(wagtail.snippets.blocks.SnippetChooserBlock(label='Type of furniture', required=True, target_model='cms_site.CollectionItemType'))), ('finishings', wagtail.core.blocks.ListBlock(wagtail.snippets.blocks.SnippetChooserBlock(label='Finishing', required=True, target_model='cms_site.CollectionItemFinishing'))), ('model', wagtail.snippets.blocks.SnippetChooserBlock(label='Model', required=True, target_model='cms_site.CollectionItemModel'))]))], verbose_name='Compositions, renders and photos')),
                ('pdf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document', verbose_name="Catalogue's PDF")),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CollectionItemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Collection item type',
                'verbose_name_plural': 'Collection item types',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='CollectionItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Collection item model',
                'verbose_name_plural': 'Collection item models',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
        migrations.CreateModel(
            name='CollectionItemFinishing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'verbose_name': 'Collection item finishing',
                'verbose_name_plural': 'Collection item finishings',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
        ),
    ]
